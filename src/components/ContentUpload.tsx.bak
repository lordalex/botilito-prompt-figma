#!/bin/bash

# Create a patch file for src/components/ContentUpload.tsx
cat > content_upload_error_handling.patch << EOF
--- a/src/components/ContentUpload.tsx
+++ b/src/components/ContentUpload.tsx
@@ -1,16 +1,21 @@
-import React, { useState, useRef } from 'react';
+import React, { useState, useRef, useCallback } from 'react';
 import botilitoImage from 'figma:asset/e27a276e6ff0e187a67cf54678c265c1c38adbf7.png';
+// NEW: Import an error-specific image for the bot.
+import botErrorImage from 'figma:asset/placeholder_for_bot_error_image.png';
 import { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';
 import { Button } from './ui/button';
 import { Textarea } from './ui/textarea';
 import { Label } from './ui/label';
 import { Badge } from './ui/badge';
 import { Progress } from './ui/progress';
 import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './ui/select';
 import { 
   Upload, FileText, Send, X, CheckCircle, Clock, Bot, Share2,
   XCircle, Flame, Ban, Skull, Target, Crosshair, Link2, Image, Video, Volume2,
-  Download, Twitter, Facebook, MessageCircle, Linkedin, User, Newspaper, ExternalLink, Tag,
-  Plus, Paperclip, Mail, Instagram, Music, Hash, Youtube, Smartphone, MessageSquare
+  Download, Twitter, Facebook, MessageCircle, Linkedin, User, Newspaper, ExternalLink, Tag,
+  Plus, Paperclip, Mail, Instagram, Music, Hash, Youtube, Smartphone, MessageSquare,
+  AlertTriangle, // NEW: Icon for error state
+  RefreshCw    // NEW: Icon for retry button
 } from 'lucide-react';
 import { Alert, AlertDescription } from './ui/alert';
 import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from './ui/tooltip';
@@ -23,6 +28,9 @@
   const [transmissionMedium, setTransmissionMedium] = useState<TransmissionVector>('Otro');
   const [isAnalyzing, setIsAnalyzing] = useState(false);
   const [analysisProgress, setAnalysisProgress] = useState(0);
-  const [analysisComplete, setAnalysisComplete] = useState(false);
   const [aiAnalysis, setAiAnalysis] = useState<any>(null);
+  
+  // NEW: State for managing analysis errors.
+  const [analysisError, setAnalysisError] = useState<string | null>(null);
+
   const [isDragging, setIsDragging] = useState(false);
   const [caseNumber, setCaseNumber] = useState('');
   const [newsTitle, setNewsTitle] = useState('');
@@ -32,8 +40,9 @@
   const [newsSource, setNewsSource] = useState<{name: string, url: string} | null>(null);
   const [reportedBy, setReportedBy] = useState('');
   const [textareaRows, setTextareaRows] = useState(1);
   const fileInputRef = useRef<HTMLInputElement>(null);
   const dropZoneRef = useRef<HTMLDivElement>(null);
   const canvasRef = useRef<HTMLCanvasElement>(null);
 
   const transmissionMediums = [
     { value: 'WhatsApp' as TransmissionVector, label: 'WhatsApp', icon: MessageCircle },
@@ -48,27 +57,21 @@
     { value: 'Web' as TransmissionVector, label: 'Web/Sitio', icon: Link2 },
     { value: 'Otro' as TransmissionVector, label: 'Otra plataforma digital', icon: Share2 },
   ];
 
-  // Auto-expand textarea based on content length
   const calculateTextareaRows = (text: string): number => {
     if (!text || text.length === 0) return 1;
-
-    // Count newlines in the text
     const newlineCount = (text.match(/\n/g) || []).length;
-
-    // Check if it's a URL (short and compact)
     const urlRegex = /(https?:\/\/[^\s]+)/g;
     const isOnlyUrl = urlRegex.test(text.trim()) && text.trim().length < 200 && newlineCount === 0;
-
     if (isOnlyUrl) return 1;
-
-    // Base calculation on content length
-    let rows = 1;
-    if (text.length > 50 && text.length <= 150) rows = 2;
-    else if (text.length > 150 && text.length <= 300) rows = 3;
-    else if (text.length > 300 && text.length <= 500) rows = 4;
-    else if (text.length > 500 && text.length <= 800) rows = 5;
-    else if (text.length > 800) rows = 6;
-
-    // Add rows for newlines (each newline adds a row)
+    let rows = Math.min(Math.ceil(text.length / 80), 6); // Base on character count
     rows = Math.max(rows, Math.min(newlineCount + 1, 6));
-
-    // Cap at 6 rows maximum
     return Math.min(rows, 6);
   };
-
-  // Handle content change with auto-detection and auto-expand
+  
   const handleContentChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {
     const newContent = e.target.value;
     setContent(newContent);
-
-    // Auto-expand textarea based on content
     const newRows = calculateTextareaRows(newContent);
     setTextareaRows(newRows);
-
-    // Auto-detect content type (URL vs text)
     const urlRegex = /(https?:\/\/[^\s]+)/g;
-    const hasUrl = urlRegex.test(newContent);
-    if (hasUrl) {
-      setContentType('url');
-    } else {
-      setContentType('texto');
-    }
+    setContentType(urlRegex.test(newContent) ? 'url' : 'texto');
   };
 
   const handleFileUpload = (files: FileList | null) => {
     if (!files) return;
     const newFiles = Array.from(files);
     setUploadedFiles(prev => [...prev, ...newFiles]);
     
-    // Detectar tipo de contenido basado en el archivo
     if (files.length > 0) {
       const file = files[0];
       if (file.type.startsWith('image/')) {
@@ -165,11 +168,14 @@
     };
   };
 
-  const performRealAIAnalysis = async () => {
+  // MODIFIED: Wrapped logic in a useCallback to ensure function identity doesn't change on re-renders,
+  // which is good practice, especially for the 'Retry' button.
+  const performRealAIAnalysis = useCallback(async () => {
     setIsAnalyzing(true);
+    setAnalysisError(null); // Clear previous errors at the start of a new attempt.
     setAnalysisProgress(0);
     setAnalysisComplete(false);
 
     try {
       // Determine if it's URL or text
@@ -218,22 +224,11 @@
           'Análisis verificado por la comunidad'
           : 'Revisa los resultados del análisis',
         finalVerdict: transformedData.finalVerdict,
-        fullResult: transformedData.fullResult
+        fullResult: transformedData.fullResult,
+        sources: transformedData.vectores.length > 0 ? transformedData.vectores : [transmissionMedium],
       });
 
-    } catch (error: any) {
-      console.error('Error en análisis AI:', error);
-      setIsAnalyzing(false);
-      setAnalysisProgress(0);
-
-      // Show error to user
-      setAiAnalysis({
-        veracity: 'Error en Análisis',
-        confidence: 0,
-        markersDetected: [],
-        summary: error.message || 'Ocurrió un error durante el análisis. Por favor, intenta de nuevo.',
-        sources: [],
-        recommendation: 'Verifica tu conexión e intenta nuevamente'
-      });
       setAnalysisComplete(true);
+    } catch (error: any) {
+      console.error('Error en análisis AI:', error);
+      // NEW: Set the error state to trigger the error UI.
+      setAnalysisError(error.message || 'Ocurrió un error desconocido. Por favor, intenta de nuevo.');
+    } finally {
+      // This ensures the loading state is turned off regardless of success or failure.
+      setIsAnalyzing(false);
     }
-  };
+  }, [content, transmissionMedium]); // Dependencies for the useCallback
 
   const handleSubmit = () => {
     if (!content && uploadedFiles.length === 0) {
@@ -291,10 +286,11 @@
     performRealAIAnalysis();
   };
 
+  // MODIFIED: The reset function now also clears the new error state.
   const resetForm = () => {
     setContent('');
     setUploadedFiles([]);
-    setTransmissionMedium('Otro'); // Reset to a default value
+    setTransmissionMedium('Otro');
     setIsAnalyzing(false);
     setAnalysisComplete(false);
     setAiAnalysis(null);
@@ -305,6 +301,7 @@
     setReportDateTime('');
     setNewsSource(null);
     setReportedBy('');
     setTextareaRows(1);
+    setAnalysisError(null); // Clear any existing errors.
   };
 
   // Función helper para dibujar rectángulos redondeados
@@ -536,112 +533,149 @@
     window.open(url, '_blank');
   };
 
+  // NEW: UI component for the error state.
+  const renderErrorState = () => (
+    <div className="flex flex-col items-center justify-center min-h-[60vh] space-y-8">
+      <div className="flex justify-center">
+        {/* Using the imported error image */}
+        <img
+          src={botErrorImage}
+          alt="Botilito con error"
+          className="w-48 h-48 object-contain"
+        />
+      </div>
+      <Card className="w-full max-w-3xl shadow-lg border-2 border-destructive bg-destructive/10">
+        <CardContent className="p-8 space-y-6 text-center">
+          <h2 className="text-2xl font-bold flex items-center justify-center gap-2 text-destructive">
+            <AlertTriangle className="h-6 w-6" />
+            ¡Uy, parce! Algo salió mal.
+          </h2>
+          <div className="space-y-4">
+            <p className="text-destructive-foreground text-center font-medium">
+              {analysisError}
+            </p>
+            <div className="flex justify-center gap-4 pt-4">
+              <Button onClick={handleSubmit} variant="outline">
+                <RefreshCw className="mr-2 h-4 w-4" />
+                Reintentar Análisis
+              </Button>
+              <Button onClick={resetForm} variant="secondary">
+                <Upload className="mr-2 h-4 w-4" />
+                Cargar otro contenido
+              </Button>
+            </div>
+          </div>
+        </CardContent>
+      </Card>
+    </div>
+  );
+
+  // NEW: UI component for the loading state.
+  const renderLoadingState = () => (
+      <div className="flex flex-col items-center justify-center min-h-[60vh] space-y-8">
+        <div className="flex justify-center">
+          <img src={botilitoImage} alt="Botilito analizando" className="w-48 h-48 object-contain animate-bounce" />
+        </div>
+        <Card className="w-full max-w-3xl shadow-lg border-2">
+          <CardContent className="p-8 space-y-6">
+            <div className="text-center space-y-3">
+              <h2 className="text-2xl font-bold flex items-center justify-center gap-2"><Bot className="h-6 w-6 text-primary" />Botilito está diagnosticando...</h2>
+              <p className="text-muted-foreground text-base">Aplicando análisis epidemiológico para detectar patrones de desinformación.</p>
+            </div>
+            <div className="space-y-4">
+              <Progress value={analysisProgress} className="w-full h-3" />
+              <p className="text-sm text-muted-foreground text-center font-medium">
+                {analysisProgress < 20 && "Secuenciando contenido..."}
+                {analysisProgress >= 20 && analysisProgress < 50 && "Identificando vectores..."}
+                {analysisProgress >= 50 && analysisProgress < 80 && "Calculando infectividad..."}
+                {analysisProgress >= 80 && "Generando diagnóstico..."}
+              </p>
+            </div>
+          </CardContent>
+        </Card>
+      </div>
+  );
+  
+  // NEW: UI component for the results state.
+  const renderResultsState = () => (
+    <div className="space-y-6">
+      {aiAnalysis && (
+          <AnalysisResultDisplay response={aiAnalysis.fullResult} />
+      )}
+      <div className="flex justify-center">
+        <Button onClick={resetForm} size="lg" className="bg-secondary hover:bg-primary text-primary-foreground transition-all duration-300">
+          <Upload className="mr-2 h-4 w-4" />
+          Reportar otro contenido
+        </Button>
+      </div>
+    </div>
+  );
+
+  // NEW: UI component for the initial form state.
+  const renderInitialForm = () => (
+      <>
+        <Card>
+            <CardHeader>
+              <CardTitle className="text-xl md:text-2xl font-bold">¡Ajá! ¿Listos para diagnosticar juntos lo que se esconde detrás de lo evidente?</CardTitle>
+            </CardHeader>
+            <CardContent>
+              <div ref={dropZoneRef} onDragEnter={handleDragEnter} onDragOver={handleDragOver} onDragLeave={handleDragLeave} onDrop={handleDrop} className={`relative border-2 border-dashed rounded-xl p-4 md:p-8 transition-all duration-300 ${isDragging ? 'bg-primary/20 border-primary' : 'border-secondary/60'}`}>
+                {/* ... existing form elements ... */}
+                 <div className="grid grid-cols-1 gap-6">
+                  <div className="space-y-6">
+                    <div className="flex flex-col md:flex-row items-center gap-4 p-4 md:p-6 bg-primary/10 rounded-[10px] border-2 border-primary/20">
+                      <img src={botilitoImage} alt="Botilito" className="h-20 w-20 md:h-[100px] md:w-[100px] object-contain flex-shrink-0" />
+                      <div className="flex-1 space-y-3">
+                        <p className="text-center md:text-left"><strong>Formatos que puedo analizar:</strong></p>
+                        <TooltipProvider>
+                          <div className="flex flex-wrap items-center justify-center md:justify-start gap-2">
+                            {/* Icons for supported formats */}
+                            <Tooltip><TooltipTrigger asChild><div className="inline-flex items-center gap-2 px-4 py-2 bg-white rounded-full border border-gray-200 cursor-help"><Link2 className="h-4 w-4" /><span className="text-sm">Enlaces</span></div></TooltipTrigger><TooltipContent><p>Pega URLs para verificar.</p></TooltipContent></Tooltip>
+                            <Tooltip><TooltipTrigger asChild><div className="inline-flex items-center gap-2 px-4 py-2 bg-white rounded-full border border-gray-200 cursor-help"><FileText className="h-4 w-4" /><span className="text-sm">Texto</span></div></TooltipTrigger><TooltipContent><p>Pega texto para chequear.</p></TooltipContent></Tooltip>
+                            <Tooltip><TooltipTrigger asChild><div className="inline-flex items-center gap-2 px-4 py-2 bg-white rounded-full border border-gray-200 cursor-help"><Image className="h-4 w-4" /><span className="text-sm">Imágenes</span></div></TooltipTrigger><TooltipContent><p>Sube capturas o fotos.</p></TooltipContent></Tooltip>
+                            <Tooltip><TooltipTrigger asChild><div className="inline-flex items-center gap-2 px-4 py-2 bg-white rounded-full border border-gray-200 cursor-help"><Video className="h-4 w-4" /><span className="text-sm">Videos</span></div></TooltipTrigger><TooltipContent><p>Sube archivos de video.</p></TooltipContent></Tooltip>
+                            <Tooltip><TooltipTrigger asChild><div className="inline-flex items-center gap-2 px-4 py-2 bg-white rounded-full border border-gray-200 cursor-help"><Volume2 className="h-4 w-4" /><span className="text-sm">Audios</span></div></TooltipTrigger><TooltipContent><p>Sube notas de voz o audios.</p></TooltipContent></Tooltip>
+                          </div>
+                        </TooltipProvider>
+                      </div>
+                    </div>
+                    <div className="text-center"><p>Arrastra y suelta o pega tu contenido aquí</p></div>
+                    <div className="space-y-2">
+                      <div className="relative flex items-start bg-white border-2 border-secondary/60 rounded-lg shadow-sm min-h-12">
+                        <button type="button" onClick={() => fileInputRef.current?.click()} className="flex-shrink-0 ml-2 mt-2 p-1.5 rounded-full hover:bg-muted transition-colors" title="Adjuntar archivo"><Plus className="h-4 w-4" /></button>
+                        <Textarea placeholder="Pega una URL, texto o arrastra un archivo..." value={content} onChange={handleContentChange} onKeyDown={(e) => { if (e.key === 'Enter' && !e.shiftKey) { e.preventDefault(); handleSubmit(); }}} rows={textareaRows} className="flex-1 resize-none border-0 bg-transparent px-3 py-3 focus-visible:ring-0 placeholder:text-muted-foreground" />
+                      </div>
+                      {content.length > 0 && <p className="text-xs text-muted-foreground text-right">{content.length} caracteres</p>}
+                    </div>
+                  </div>
+                </div>
+                <input ref={fileInputRef} type="file" multiple className="hidden" onChange={(e) => handleFileUpload(e.target.files)} />
+                {uploadedFiles.length > 0 && (
+                  <div className="space-y-2 pt-6 mt-6 border-t border-secondary/40">
+                    <Label>Archivos seleccionados:</Label>
+                    {uploadedFiles.map((file, index) => (
+                      <div key={index} className="flex items-center justify-between p-3 bg-white border rounded-lg">
+                         <div className="flex items-center space-x-3">
+                          <div className="p-2 bg-secondary/40 rounded">
+                            {file.type.startsWith('image/') ? <Image className="h-4 w-4" /> : file.type.startsWith('video/') ? <Video className="h-4 w-4" /> : file.type.startsWith('audio/') ? <Volume2 className="h-4 w-4" /> : <FileText className="h-4 w-4" />}
+                          </div>
+                          <div>
+                            <p className="font-medium text-sm">{file.name}</p>
+                            <p className="text-xs text-muted-foreground">{(file.size / 1024 / 1024).toFixed(2)} MB</p>
+                          </div>
+                        </div>
+                        <Button variant="ghost" size="icon" onClick={() => removeFile(index)} className="h-8 w-8"><X className="h-4 w-4" /></Button>
+                      </div>
+                    ))}
+                  </div>
+                )}
+              </div>
+            </CardContent>
+        </Card>
+        <Card>
+            <CardHeader>
+              <CardTitle className="flex items-center gap-2"><Share2 className="h-5 w-5" />Vector de Transmisión</CardTitle>
+              <CardDescription>¿Por dónde recibiste este contenido?</CardDescription>
+            </CardHeader>
+            <CardContent>
+              <Select value={transmissionMedium} onValueChange={(value) => setTransmissionMedium(value as TransmissionVector)}>
+                  <SelectTrigger className="w-full border-2"><SelectValue placeholder="Selecciona el medio..." /></SelectTrigger>
+                  <SelectContent>
+                    {transmissionMediums.map((medium) => {
+                      const IconComponent = medium.icon;
+                      return <SelectItem key={medium.value} value={medium.value}><div className="flex items-center gap-2"><IconComponent className="h-4 w-4" /><span>{medium.label}</span></div></SelectItem>;
+                    })}
+                  </SelectContent>
+              </Select>
+            </CardContent>
+        </Card>
+        <div className="flex justify-end">
+          <Button onClick={handleSubmit} disabled={(!content && uploadedFiles.length === 0) || !transmissionMedium}>
+            <Send className="h-4 w-4 mr-2" />
+            Iniciar Diagnóstico
+          </Button>
+        </div>
+      </>
+  );
+
   return (
-    // RESPONSIVE: Added responsive padding. p-4 for mobile, md:p-6 for tablets, lg:pt-5 for desktops.
     <div className="max-w-5xl mx-auto p-4 md:p-6 lg:pt-5 space-y-6">
-      {/* Franja superior de Botilito cuando el análisis está completo */}
-      {analysisComplete && !isAnalyzing && (
-        <div className="bg-[#ffe97a] border-2 border-[#ffda00] rounded-lg p-4 shadow-lg">
-          {/* RESPONSIVE: Stacks vertically on mobile (flex-col), horizontal on medium screens and up (md:flex-row). Centered text on mobile. */}
-          <div className="flex flex-col md:flex-row items-center space-y-4 md:space-y-0 md:space-x-4 text-center md:text-left">
-            <img 
-              src={botilitoImage} 
-              alt="Botilito" 
-              // RESPONSIVE: Smaller image on mobile, larger on medium screens. Adjusted margins for stacking.
-              className="w-20 h-20 md:w-24 md:h-24 object-contain mb-2 md:mb-[-18px] md:mr-[16px]"
-            />
-            <div className="flex-1">
-              {/* RESPONSIVE: Slightly smaller text on mobile. */}
-              <p className="text-lg md:text-xl font-semibold">
-                ¡Mis circuitos ya escanearon esto de arriba a abajo! 🔍⚡
-              </p>
-              <p className="text-sm mt-1 opacity-80">
-                Ya le pasé este caso a mis parceros de carne y hueso de <span className="font-medium">Digital-IA</span> para que hagan su diagnóstico humano! 🤝
-              </p>
-            </div>
-          </div>
-        </div>
-      )}
-
-      {/* Upload Form - Only show when not analyzing and not complete */}
-      {!analysisComplete && !isAnalyzing && (
-        <>
-          {/* Main Upload Card */}
-          <Card>
-            <CardHeader>
-              {/* RESPONSIVE: Responsive title font size. */}
-              <CardTitle className="text-xl md:text-2xl font-bold">Ajá! ¿listos para diagnosticar juntos lo que se esconde detrás de lo evidente?</CardTitle>
-            </CardHeader>
-            <CardContent>
-              {/* Universal Input Area */}
-              <div 
-                ref={dropZoneRef}
-                onDragEnter={handleDragEnter}
-                onDragOver={handleDragOver}
-                onDragLeave={handleDragLeave}
-                onDrop={handleDrop}
-                // RESPONSIVE: Responsive padding for the drop zone.
-                className={`relative border-2 border-solid rounded-xl p-4 md:p-8 transition-all duration-300 bg-[#ffeea9] border-secondary/60 ${
-                  isDragging 
-                    ? 'bg-[#ffe68f] border-primary scale-[1.02] shadow-lg' 
-                    : 'hover:bg-[#ffeb98] hover:border-primary/80 hover:shadow-md'
-                }`}
-              >
-                {/* RESPONSIVE: Changed to a single-column grid for a simple vertical layout. */}
-                <div className="grid grid-cols-1 gap-6">
-                  <div className="space-y-6">
-                    {/* Sección Superior: Formatos Soportados */}
-                    {/* RESPONSIVE: Stacks on mobile, responsive padding instead of fixed px. */}
-                    <div className="flex flex-col md:flex-row items-center gap-4 p-4 md:p-6 bg-[rgb(255,233,122)] rounded-[10px] border-2 border-[#ffda00]">
-                      {/* Botilito a la izquierda */}
-                      {/* RESPONSIVE: Smaller image on mobile. */}
-                      <img src={botilitoImage} alt="Botilito" className="h-20 w-20 md:h-[100px] md:w-[100px] object-contain flex-shrink-0" />
-                      
-                      {/* Contenido a la derecha */}
-                      <div className="flex-1 space-y-3">
-                        <p className="text-center md:text-left">
-                          <strong>En Digital-IA me incorporaron tecnología para analizar:</strong>
-                        </p>
-                        <TooltipProvider>
-                          {/* RESPONSIVE: Centers the badges on mobile when they wrap. */}
-                          <div className="flex flex-wrap items-center justify-center md:justify-start gap-2">
-                            {/* Enlaces */}
-                            <Tooltip>
-                              <TooltipTrigger asChild>
-                                <div className="inline-flex items-center gap-2 px-4 py-2 bg-white rounded-full border border-gray-200 cursor-help">
-                                  <Link2 className="h-4 w-4 text-black" />
-                                  <span className="text-sm">Enlaces</span>
-                                </div>
-                              </TooltipTrigger>
-                              <TooltipContent side="bottom">
-                                <p>Pega URLs de redes sociales, noticias o cualquier link pa' verificar</p>
-                              </TooltipContent>
-                            </Tooltip>
-
-                            {/* Texto */}
-                            <Tooltip>
-                              <TooltipTrigger asChild>
-                                <div className="inline-flex items-center gap-2 px-4 py-2 bg-white rounded-full border border-gray-200 cursor-help">
-                                  <FileText className="h-4 w-4 text-black" />
-                                  <span className="text-sm">Texto</span>
-                                </div>
-                              </TooltipTrigger>
-                              <TooltipContent side="bottom">
-                                <p>Escribe o pega el texto que quieres chequear, parce</p>
-                              </TooltipContent>
-                            </Tooltip>
-
-                            {/* Imágenes */}
-                            <Tooltip>
-                              <TooltipTrigger asChild>
-                                <div className="inline-flex items-center gap-2 px-4 py-2 bg-white rounded-full border border-gray-200 cursor-help">
-                                  <Image className="h-4 w-4 text-black" />
-                                  <span className="text-sm">Imágenes</span>
-                                </div>
-                              </TooltipTrigger>
-                              <TooltipContent side="bottom">
-                                <p>Sube capturas de pantalla, memes o fotos que te parezcan raras</p>
-                              </TooltipContent>
-                            </Tooltip>
-
-                            {/* Videos */}
-                            <Tooltip>
-                              <TooltipTrigger asChild>
-                                <div className="inline-flex items-center gap-2 px-4 py-2 bg-white rounded-full border border-gray-200 cursor-help">
-                                  <Video className="h-4 w-4 text-black" />
-                                  <span className="text-sm">Videos</span>
-                                </div>
-                              </TooltipTrigger>
-                              <TooltipContent side="bottom">
-                                <p>Sube tus archivos de video MP4, MOV, AVI o cualquier formato</p>
-                              </TooltipContent>
-                            </Tooltip>
-
-                            {/* Audios */}
-                            <Tooltip>
-                              <TooltipTrigger asChild>
-                                <div className="inline-flex items-center gap-2 px-4 py-2 bg-white rounded-full border border-gray-200 cursor-help">
-                                  <Volume2 className="h-4 w-4 text-black" />
-                                  <span className="text-sm">Audios</span>
-                                </div>
-                              </TooltipTrigger>
-                              <TooltipContent side="bottom">
-                                <p>Sube notas de voz, podcasts o audios que circulan por ahí</p>
-                              </TooltipContent>
-                            </Tooltip>
-                          </div>
-                        </TooltipProvider>
-                      </div>
-                    </div>
-
-                    {/* Sección Media: Instrucciones */}
-                    <div className="text-center">
-                      <p>Arrastra y suelta o pega tu contenido aquí</p>
-                    </div>
-
-                    {/* Sección Inferior: Barra de Input */}
-                    <div className="space-y-2">
-                      <div className="relative flex items-start bg-white border-2 border-secondary/60 rounded-[8px] shadow-sm min-h-11">
-                        {/* Botón + integrado a la izquierda */}
-                        <button
-                          type="button"
-                          onClick={() => fileInputRef.current?.click()}
-                          className="flex-shrink-0 ml-2 p-1.5 rounded-full bg-transparent hover:bg-primary no-hover-effect group transition-colors"
-                          title="Adjuntar archivo"
-                        >
-                          <Plus className="h-4 w-4 text-black/60" />
-                        </button>
-
-                        {/* Textarea integrado en el centro */}
-                        <Textarea
-                          placeholder="Pega aquí una URL, texto sospechoso, o escribe lo que quieras analizar..."
-                          value={content}
-                          onChange={handleContentChange}
-                          onKeyDown={(e) => {
-                            if (e.key === 'Enter' && !e.shiftKey) {
-                              e.preventDefault();
-                              // FIX: Corrected to call handleSubmit without arguments.
-                              handleSubmit();
-                            }
-                          }}
-                          rows={textareaRows}
-                          className="flex-1 resize-none border-0 bg-transparent px-3 min-h-11 focus:outline-none focus:ring-0 focus-visible:ring-0 focus-visible:border-0 placeholder:text-muted-foreground text-sm leading-relaxed transition-all duration-200"
-                        />
-                      </div>
-                      {content.length > 0 && (
-                        <p className="text-xs text-muted-foreground text-right">
-                          {content.length} caracteres
-                        </p>
-                      )}
-                    </div>
-                  </div>
-                </div>
-
-                {/* Input de archivo oculto - Se activa con el botón + de la barra de chat */}
-                <input
-                  ref={fileInputRef}
-                  type="file"
-                  multiple
-                  className="hidden"
-                  accept="image/*,video/*,audio/*"
-                  onChange={(e) => handleFileUpload(e.target.files)}
-                />
-
-                {/* Uploaded Files List */}
-                {uploadedFiles.length > 0 && (
-                  <div className="space-y-2 pt-6 mt-6 border-t border-secondary/40">
-                    <Label>Archivos seleccionados:</Label>
-                    {uploadedFiles.map((file, index) => (
-                      <div key={index} className="flex items-center justify-between p-3 bg-white border border-secondary/40 rounded-lg hover:border-primary/60 transition-colors">
-                        <div className="flex items-center space-x-3">
-                          <div className="p-2 bg-secondary/40 rounded">
-                            {file.type.startsWith('image/') && <Image className="h-4 w-4 text-black" />}
-                            {file.type.startsWith('video/') && <Video className="h-4 w-4 text-black" />}
-                            {file.type.startsWith('audio/') && <Volume2 className="h-4 w-4 text-black" />}
-                            {!file.type.startsWith('image/') && !file.type.startsWith('video/') && !file.type.startsWith('audio/') && <FileText className="h-4 w-4 text-black" />}
-                          </div>
-                          <div>
-                            <p className="font-medium">{file.name}</p>
-                            <p className="text-xs text-muted-foreground">
-                              {(file.size / 1024 / 1024).toFixed(2)} MB
-                            </p>
-                          </div>
-                        </div>
-                        <Button
-                          variant="ghost"
-                          size="sm"
-                          onClick={() => removeFile(index)}
-                          className="h-8 w-8 p-0 hover:bg-secondary/40"
-                        >
-                          <X className="h-4 w-4" />
-                        </Button>
-                      </div>
-                    ))}
-                  </div>
-                )}
-              </div>
-            </CardContent>
-          </Card>
-
-          {/* Transmission Medium Selection */}
-          <Card>
-            <CardHeader>
-              <CardTitle className="flex items-center gap-2">
-                <Share2 className="h-5 w-5" />
-                Vector de Transmisión
-              </CardTitle>
-              <CardDescription>
-                ¿Por dónde recibiste este contenido? Esta información nos ayuda a rastrear las rutas epidemiológicas de la desinformación.
-              </CardDescription>
-            </CardHeader>
-            <CardContent>
-              <div className="space-y-2">
-                <Select value={transmissionMedium} onValueChange={setTransmissionMedium}>
-                  <SelectTrigger className="w-full border-2 border-gray-300 focus:border-primary/50 transition-colors">
-                    <SelectValue placeholder="Cuéntame, ¿por dónde viste eso?" />
-                  </SelectTrigger>
-                  <SelectContent>
-                    {transmissionMediums.map((medium) => {
-                      const IconComponent = medium.icon;
-                      return (
-                        <SelectItem key={medium.value} value={medium.value}>
-                          <div className="flex items-center gap-2">
-                            <IconComponent className="h-4 w-4" />
-                            <span>{medium.label}</span>
-                          </div>
-                        </SelectItem>
-                      );
-                    })}
-                  </SelectContent>
-                </Select>
-              </div>
-            </CardContent>
-          </Card>
-
-          {/* Submit Button */}
-          <div className="flex justify-end">
-            <Button 
-              onClick={handleSubmit}
-              disabled={(!content && uploadedFiles.length === 0) || !transmissionMedium}
-              className="flex items-center space-x-2"
-            >
-              <Send className="h-4 w-4" />
-              <span>Iniciar Diagnóstico</span>
-            </Button>
-          </div>
-        </>
-      )}
-
-      {/* Loader Page - Clean centered view during analysis */}
-      {isAnalyzing && (
-        <div className="flex flex-col items-center justify-center min-h-[60vh] space-y-8">
-          {/* Botilito Character */}
-          <div className="flex justify-center">
-            <img
-              src={botilitoImage}
-              alt="Botilito analizando"
-              className="w-48 h-48 object-contain animate-bounce"
-            />
-          </div>
-
-          {/* Loader Card */}
-          <Card className="w-full max-w-3xl shadow-lg border-2">
-            <CardContent className="p-8 space-y-6">
-              {/* Title */}
-              <div className="text-center space-y-3">
-                <h2 className="text-2xl font-bold flex items-center justify-center gap-2">
-                  <Bot className="h-6 w-6 text-primary" />
-                  Botilito está diagnosticando...
-                </h2>
-                <p className="text-muted-foreground text-base">
-                  Aplicando análisis epidemiológico para detectar patrones de desinformación y evaluar su potencial viral
-                </p>
-              </div>
-
-              {/* Progress Bar */}
-              <div className="space-y-4">
-                <Progress value={analysisProgress} className="w-full h-3" />
-
-                {/* Status Text */}
-                <p className="text-sm text-muted-foreground text-center font-medium">
-                  {analysisProgress < 20 && "Secuenciando contenido desinfodémico..."}
-                  {analysisProgress >= 20 && analysisProgress < 50 && "Identificando vectores de transmisión..."}
-                  {analysisProgress >= 50 && analysisProgress < 80 && "Calculando índice de infectividad..."}
-                  {analysisProgress >= 80 && analysisProgress < 95 && "Generando diagnóstico epidemiológico..."}
-                  {analysisProgress >= 95 && "Finalizando análisis..."}
-                </p>
-              </div>
-            </CardContent>
-          </Card>
-        </div>
-      )}
-
-      {/* Analysis Results - Only show when complete and not analyzing */}
-      {analysisComplete && !isAnalyzing && aiAnalysis && (
-        <div className="space-y-6">
-          <Card>
-            <CardHeader>
-              {/* RESPONSIVE: Header stacks vertically on mobile, switches to row on medium screens. */}
-              <div className="flex flex-col md:flex-row items-start md:items-center justify-between gap-4">
-                {/* RESPONSIVE: Title font size adjusted. */}
-                <CardTitle className="flex items-center space-x-2 text-xl md:text-2xl">
-                  <Bot className="h-5 w-5 text-primary" />
-                  <span className="font-bold">Diagnóstico Desinfodémico de Botilito</span>
-                </CardTitle>
-                {/* RESPONSIVE: Aligns items to the start on mobile, end on medium screens. */}
-                <div className="flex flex-col items-start md:items-end space-y-1 w-full md:w-auto">
-                   {/* RESPONSIVE: Badges justify to the start on mobile. */}
-                  <div className="flex flex-wrap gap-2 justify-start md:justify-end">
-                    <Badge variant="outline" className="text-sm bg-[#ffe97a]">
-                      Caso: {caseNumber}
-                    </Badge>
-                    {aiAnalysis.consensusState && (
-                      <Badge
-                        variant="outline"
-                        className={`text-sm ${
-                          aiAnalysis.consensusState === 'human_consensus'
-                            ? 'bg-emerald-100 border-emerald-500 text-emerald-700'
-                            : aiAnalysis.consensusState === 'conflicted'
-                            ? 'bg-orange-100 border-orange-500 text-orange-700'
-                            : 'bg-blue-100 border-blue-500 text-blue-700'
-                        }`}
-                      >
-                        {aiAnalysis.consensusState === 'human_consensus' && '✓ Verificado por Humanos'}
-                        {aiAnalysis.consensusState === 'conflicted' && '⚠ Opiniones Divididas'}
-                        {aiAnalysis.consensusState === 'ai_only' && '🤖 Análisis AI'}
-                      </Badge>
-                    )}
-                  </div>
-                  {reportDateTime && (
-                    <p className="text-xs text-muted-foreground">
-                      {reportDateTime}
-                    </p>
-                  )}
-                  {reportedBy && (
-                    <div className="flex items-center space-x-1 text-xs text-muted-foreground">
-                      <User className="h-3 w-3" />
-                      <span className="font-normal font-bold">Reportado por: {reportedBy}</span>
-                    </div>
-                  )}
-                </div>
-              </div>
-            </CardHeader>
-            <CardContent className="space-y-4">
-              {/* Título y contenido de la noticia si corresponde */}
-              {newsTitle && newsContent && (
-                <div className="p-4 bg-secondary/30 border-2 border-secondary/60 rounded-lg space-y-3">
-                  {/* Captura de la noticia con etiquetas superpuestas - Formato horizontal compacto */}
-                  {newsScreenshot && (
-                    <div>
-                      <Label>Captura de la noticia:</Label>
-                      <div className="mt-2 rounded-lg overflow-hidden border-2 border-secondary/40 relative max-h-40 md:max-h-48">
-                        <img 
-                          src={newsScreenshot} 
-                          alt="Captura de la noticia" 
-                           // RESPONSIVE: Responsive image height.
-                          className="w-full h-40 md:h-48 object-cover object-top"
-                        />
-                        
-                        {/* Overlay con etiquetas detectadas */}
-                        <div className="absolute inset-0 bg-gradient-to-t from-black/70 via-black/30 to-transparent flex items-end justify-center p-4">
-                          <TooltipProvider>
-                            <div className="flex flex-wrap gap-2 justify-center">
-                              {aiAnalysis.markersDetected?.slice(0, 3).map((marker: any, index: number) => {
-                              const getMarkerColor = (type: string) => {
-                                const colorMap: { [key: string]: string } = {
-                                  'Verdadero': 'bg-emerald-500 hover:bg-emerald-600',
-                                  'Falso': 'bg-red-500 hover:bg-red-600',
-                                  'Engañoso': 'bg-orange-500 hover:bg-orange-600',
-                                  'Satírico': 'bg-blue-500 hover:bg-blue-600',
-                                  'Satírico/Humorístico': 'bg-blue-500 hover:bg-blue-600',
-                                  'Manipulado': 'bg-purple-500 hover:bg-purple-600',
-                                  'Discurso de odio': 'bg-red-700 hover:bg-red-800',
-                                  'Discurso de odio (Xenofobia)': 'bg-red-700 hover:bg-red-800',
-                                  'Racismo/Xenofobia': 'bg-red-700 hover:bg-red-800',
-                                  'Sexismo/LGBTQ+fobia': 'bg-red-700 hover:bg-red-800',
-                                  'Clasismo/Aporofobia': 'bg-red-600 hover:bg-red-700',
-                                  'Ableismo': 'bg-red-600 hover:bg-red-700',
-                                  'Propaganda': 'bg-indigo-600 hover:bg-indigo-700',
-                                  'Spam': 'bg-gray-500 hover:bg-gray-600',
-                                  'Conspiración': 'bg-violet-600 hover:bg-violet-700',
-                                  'Teoría conspirativa': 'bg-violet-600 hover:bg-violet-700',
-                                  'Sesgo Político': 'bg-yellow-600 hover:bg-yellow-700',
-                                  'Estafa': 'bg-purple-700 hover:bg-purple-800',
-                                  'Sensacionalista': 'bg-orange-400 hover:bg-orange-500',
-                                  'Incitación a la violencia': 'bg-red-900 hover:bg-red-950',
-                                  'Descontextualizado': 'bg-amber-500 hover:bg-amber-600',
-                                  'Sin contexto': 'bg-amber-500 hover:bg-amber-600',
-                                  'Parcialmente Cierto': 'bg-orange-500 hover:bg-orange-600',
-                                  'Contenido Patrocinado': 'bg-indigo-600 hover:bg-indigo-700',
-                                  'Opinión': 'bg-gray-500 hover:bg-gray-600',
-                                  'Rumor': 'bg-gray-500 hover:bg-gray-600',
-                                  'No verificable': 'bg-gray-500 hover:bg-gray-600',
-                                  'Deepfake': 'bg-purple-500 hover:bg-purple-600',
-                                  'Sin Verificar': 'bg-gray-500 hover:bg-gray-600',
-                                  'Bot/Coordinado': 'bg-indigo-600 hover:bg-indigo-700',
-                                  'Suplantación de identidad': 'bg-purple-700 hover:bg-purple-800',
-                                  'Acoso/Ciberbullying': 'bg-orange-700 hover:bg-orange-800',
-                                  'Contenido prejuicioso': 'bg-yellow-600 hover:bg-yellow-700',
-                                  'En revisión': 'bg-gray-400 hover:bg-gray-500'
-                                };
-                                return colorMap[type] || 'bg-gray-500 hover:bg-gray-600';
-                              };
-
-                              const getMarkerIcon = (type: string) => {
-                                const iconMap: { [key: string]: React.ReactNode } = {
-                                  'Falso': <XCircle className={index === 0 ? "h-6 w-6" : "h-5 w-5"} />,
-                                  'Discurso de odio (Xenofobia)': <Skull className={index === 0 ? "h-6 w-6" : "h-5 w-5"} />,
-                                  'Incitación a la violencia': <Ban className={index === 0 ? "h-6 w-6" : "h-5 w-5"} />,
-                                  'Sensacionalista': <Flame className={index === 0 ? "h-6 w-6" : "h-5 w-5"} />,
-                                };
-                                return iconMap[type] || <Target className={index === 0 ? "h-6 w-6" : "h-5 w-5"} />;
-                              };
-
-                              return (
-                                <Tooltip key={index}>
-                                  <TooltipTrigger asChild>
-                                    {/* RESPONSIVE: Smaller badges on mobile. */}
-                                    <Badge
-                                      className={`${getMarkerColor(marker.type)} text-white shadow-lg cursor-help ${
-                                        index === 0
-                                          ? 'px-3 py-1.5 text-sm sm:px-4 sm:py-2 sm:text-base scale-105'
-                                          : 'px-2 py-1 text-xs sm:px-3 sm:py-1.5 sm:text-sm'
-                                      }`}
-                                    >
-                                      {getMarkerIcon(marker.type)}
-                                      <span className="ml-1.5">{marker.type}</span>
-                                    </Badge>
-                                  </TooltipTrigger>
-                                  <TooltipContent className="max-w-xs">
-                                    <p className="text-sm">{marker.explanation}</p>
-                                  </TooltipContent>
-                                </Tooltip>
-                              );
-                            })}
-                            </div>
-                          </TooltipProvider>
-                        </div>
-                      </div>
-                    </div>
-                  )}
-                  
-                  {newsSource && (
-                    <div className="flex flex-wrap items-center gap-4 pb-2">
-                      {/* Fuente de la noticia */}
-                      <div className="flex items-center space-x-2">
-                        <Newspaper className="h-4 w-4 text-primary" />
-                        <Label className="text-sm">Fuente:</Label>
-                        <a 
-                          href={newsSource.url} 
-                          target="_blank" 
-                          rel="noopener noreferrer"
-                          className="inline-flex items-center space-x-1.5 px-3 py-1.5 bg-secondary/60 hover:bg-secondary text-secondary-foreground rounded-md transition-colors text-xs no-hover-effect"
-                        >
-                          <span>{newsSource.name}</span>
-                          <ExternalLink className="h-3 w-3" />
-                        </a>
-                      </div>
-                      
-                      {/* Tema del contenido */}
-                      {contentTheme && (
-                        <div className="flex items-center space-x-2">
-                          <Tag className="h-4 w-4 text-primary" />
-                          <Label className="text-sm">Tema:</Label>
-                          <Badge variant="outline" className="text-xs border-primary/40 bg-primary/10">
-                            {contentTheme}
-                          </Badge>
-                        </div>
-                      )}
-
-                      {/* Región del contenido */}
-                      {aiAnalysis.region && (
-                        <div className="flex items-center space-x-2">
-                          <Tag className="h-4 w-4 text-primary" />
-                          <Label className="text-sm">Región:</Label>
-                          <Badge variant="outline" className="text-xs border-primary/40 bg-primary/10">
-                            {aiAnalysis.region}
-                          </Badge>
-                        </div>
-                      )}
-                    </div>
-                  )}
-                  
-                  <div>
-                    <Label>Titular de la noticia:</Label>
-                    <div className="mt-1 p-3 bg-primary/20 border border-primary/40 rounded-lg">
-                      <p className="font-medium">{newsTitle}</p>
-                    </div>
-                  </div>
-                  <div>
-                    <Label>Contenido analizado:</Label>
-                    <p className="text-sm text-muted-foreground mt-1 leading-relaxed">{newsContent}</p>
-                  </div>
-                </div>
-              )}
-
-              <div>
-                {/* RESPONSIVE: Responsive title size. */}
-                <h4 className="text-lg md:text-xl font-semibold">Evaluación epidemiológica:</h4>
-                <p className="text-sm text-muted-foreground mt-1">{aiAnalysis.finalVerdict}</p>
-              </div>
-
-              <div>
-                <Label className="flex items-center space-x-2">
-                  <Share2 className="h-4 w-4 text-primary" />
-                  <span>Vectores de transmisión identificados:</span>
-                </Label>
-                <div className="flex flex-wrap gap-2 mt-3">
-                  {aiAnalysis.sources.map((source: string, index: number) => {
-                    const getPlatformIcon = (platform: string) => {
-                      const lowerPlatform = platform.toLowerCase();
-                      if (lowerPlatform.includes('whatsapp')) return <MessageCircle className="h-4 w-4" />;
-                      if (lowerPlatform.includes('facebook')) return <Facebook className="h-4 w-4" />;
-                      if (lowerPlatform.includes('twitter') || lowerPlatform.includes('x')) return <Twitter className="h-4 w-4" />;
-                      if (lowerPlatform.includes('instagram')) return <Instagram className="h-4 w-4" />;
-                      if (lowerPlatform.includes('tiktok')) return <Music className="h-4 w-4" />;
-                      if (lowerPlatform.includes('youtube')) return <Youtube className="h-4 w-4" />;
-                      if (lowerPlatform.includes('telegram')) return <Send className="h-4 w-4" />;
-                      if (lowerPlatform.includes('linkedin')) return <Linkedin className="h-4 w-4" />;
-                      if (lowerPlatform.includes('email') || lowerPlatform.includes('correo')) return <Mail className="h-4 w-4" />;
-                      return <Share2 className="h-4 w-4" />;
-                    };
-
-                    const getPlatformColor = (platform: string) => {
-                      // Colores de marca de cada vector de transmisión
-                      const lowerPlatform = platform.toLowerCase();
-                      if (lowerPlatform.includes('whatsapp')) return 'bg-[#25D366] text-white border border-[#1da851]';
-                      if (lowerPlatform.includes('facebook')) return 'bg-[#1877F2] text-white border border-[#0c63d4]';
-                      if (lowerPlatform.includes('twitter') || lowerPlatform.includes('x')) return 'bg-black text-white border border-gray-800';
-                      if (lowerPlatform.includes('instagram')) return 'bg-gradient-to-tr from-[#F58529] via-[#DD2A7B] to-[#8134AF] text-white border border-[#C13584]';
-                      if (lowerPlatform.includes('tiktok')) return 'bg-black text-white border border-[#00f2ea]';
-                      if (lowerPlatform.includes('youtube')) return 'bg-[#FF0000] text-white border border-[#cc0000]';
-                      if (lowerPlatform.includes('telegram')) return 'bg-[#0088cc] text-white border border-[#006ba1]';
-                      if (lowerPlatform.includes('linkedin')) return 'bg-[#0A66C2] text-white border border-[#004182]';
-                      if (lowerPlatform.includes('email') || lowerPlatform.includes('correo')) return 'bg-[#5f6368] text-white border border-[#4a4d50]';
-                      return 'bg-gray-600 text-white border border-gray-700';
-                    };
-
-                    return (
-                      <Badge 
-                        key={index}
-                        className={`${getPlatformColor(source)} px-3 py-2 flex items-center space-x-2 shadow-sm`}
-                      >
-                        {getPlatformIcon(source)}
-                        <span>{source}</span>
-                      </Badge>
-                    );
-                  })}
-                </div>
-              </div>
-
-              {/* Compartir en redes sociales y descargar */}
-              <div className="pt-6 border-t space-y-4">
-                <div>
-                  <Label className="flex items-center space-x-2 mb-3">
-                    <Share2 className="h-4 w-4 text-primary" />
-                    <span>¡Vamos a inmunizar a todo el país! Comparte este diagnóstico.</span>
-                  </Label>
-                  <div className="flex flex-wrap items-center gap-3">
-                    <Button
-                      onClick={shareOnTwitter}
-                      size="icon"
-                      title="Compartir en Twitter/X"
-                      className="h-9 w-9 rounded-full bg-black hover:bg-gray-800 text-white no-hover-effect"
-                    >
-                      <Twitter className="h-4 w-4" />
-                    </Button>
-                    <Button
-                      onClick={shareOnFacebook}
-                      size="icon"
-                      title="Compartir en Facebook"
-                      className="h-9 w-9 rounded-full bg-[#1877F2] hover:bg-[#166fe5] text-white no-hover-effect"
-                    >
-                      <Facebook className="h-4 w-4" />
-                    </Button>
-                    <Button
-                      onClick={shareOnWhatsApp}
-                      size="icon"
-                      title="Compartir en WhatsApp"
-                      className="h-9 w-9 rounded-full bg-[#25D366] hover:bg-[#20bd5a] text-white no-hover-effect"
-                    >
-                      <MessageCircle className="h-4 w-4" />
-                    </Button>
-                    <Button
-                      onClick={shareOnLinkedIn}
-                      size="icon"
-                      title="Compartir en LinkedIn"
-                      className="h-9 w-9 rounded-full bg-[#0A66C2] hover:bg-[#095bad] text-white no-hover-effect"
-                    >
-                      <Linkedin className="h-4 w-4" />
-                    </Button>
-                    <div className="h-4 w-px bg-border mx-1"></div>
-                    <Button
-                      onClick={handleDownloadImage}
-                      size="sm"
-                      title="Descargar imagen resumen"
-                      className="rounded-[6px] bg-secondary hover:bg-primary text-primary-foreground px-4"
-                    >
-                      <Download className="h-4 w-4 mr-2" />
-                      <span className="text-sm">Descargar</span>
-                    </Button>
-                  </div>
-                </div>
-              </div>
-
-              {/* Canvas oculto para generar imagen */}
-              <canvas ref={canvasRef} className="hidden" />
-            </CardContent>
-          </Card>
-
-          <div className="flex">
-            <Button onClick={resetForm} className="bg-secondary hover:bg-primary text-primary-foreground transition-all duration-300">
-              Quiero reportar otro contenido!
-            </Button>
-          </div>
-        </div>
-      )}
+      {analysisError ? renderErrorState() :
+       isAnalyzing ? renderLoadingState() :
+       analysisComplete && aiAnalysis ? renderResultsState() :
+       renderInitialForm()}
     </div>
   );
 }
EOF

# Apply the patch
patch -p1 < content_upload_error_handling.patch

# Create the patch script
cat > patch.sh << EOF
#!/bin/bash
# This script applies the error handling improvements to ContentUpload.tsx

# Create a backup of the original file
cp src/components/ContentUpload.tsx src/components/ContentUpload.tsx.bak

# Apply the patch
patch -p1 < content_upload_error_handling.patch

if [ \$? -eq 0 ]; then
  echo "✅ Patch applied successfully to src/components/ContentUpload.tsx."
  rm content_upload_error_handling.patch
  # Optional: remove backup if patch is successful
  # rm src/components/ContentUpload.tsx.bak
else
  echo "❌ Error applying patch. Restoring from backup."
  mv src/components/ContentUpload.tsx.bak src/components/ContentUpload.tsx
  rm content_upload_error_handling.patch
  exit 1
fi

echo "✨ Done. The ContentUpload component now has a dedicated error handling UI."

EOF

chmod +x patch.sh

